{"version":3,"sources":["logo.svg","components/Pagecontents.js","components/Sidebar.js","components/Header.js","components/Dashboard.js","components/Login.js","redux/action.js","redux/actionType.js","redux/reducer.js","redux/store.js","components/UpComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Pagecontents","props","updateHandler","pageId","access_token","setState","redirect","selPage","accessToken","state","pageData","this","data","to","pathname","acc_tok","Fragment","map","pages","key","id","name","category","className","onClick","Component","Sidebar","Header","Dashboard","componentDidMount","pageDat","axios","get","userID","then","res","console","log","colSpan","connect","shortAccessToken","userId","Login","responseFacebook","response","status","auth","componentClicked","page","appId","autoLoad","fields","callback","defaults","dispatch","type","payload","initState","photo","email","reducers","action","picture","store","createStore","UpComponent","postHandler","match","params","Axios","post","message","location","ress","messageHandler","event","target","value","onChange","App","exact","path","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.92cefb07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory } from \"react-router-dom\";\r\nexport class Pagecontents extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            redirect : false,\r\n            selPage : 1,\r\n        }\r\n    }\r\n\r\n    updateHandler = (pageId, access_token) => {\r\n        this.setState({\r\n            redirect : true,\r\n            selPage : pageId,\r\n            accessToken : access_token\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const pageData = this.props.data\r\n        if(this.state.redirect){\r\n            return(\r\n                <Redirect to={{\r\n                    pathname: `/update/`+this.state.selPage,\r\n                    state: { acc_tok: this.state.accessToken }\r\n                }}  />\r\n               \r\n            )\r\n        }\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    pageData.map(pages => (\r\n                        <tr key={pages.id}>\r\n                            <td>{pages.name}</td>\r\n                            <td>{pages.category}</td>\r\n                            <td>2/5</td>\r\n                            <td>Yes</td>\r\n                            <td><i className=\"fas fa-check\"></i></td>\r\n                            <td><button className=\"btn btn-info\" onClick = {() => this.updateHandler(pages.id, pages.access_token)}>Update</button></td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagecontents\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory } from \"react-router-dom\";\r\nexport class Sidebar extends Component {\r\n    render() {\r\n        return (\r\n        \r\n                <div className=\"sidebar\">\r\n                        <h5>GROWTH PLUG</h5>\r\n                        <ul className=\"side-contents\">\r\n                            <li className=\"active\"><Link to=\"/dashboard\" className=\"side-text\"><i className=\"fas fa-home\"></i>Dashboard</Link></li>\r\n                            <li><a className=\"side-text\" ><i className=\"fas fa-user\"></i>Website</a></li>\r\n                            <li><a className=\"side-text\"><i className=\"fas fa-address-card\"></i>Visitors</a></li>\r\n                            <li><a className=\"side-text\"><i className=\"fas fa-project-diagram\"></i>Reviews</a></li>\r\n                            <li><a className=\"side-text\"><i className=\"fas fa-blog\"></i>Listing</a></li>\r\n                            <li><a className=\"side-text\"><i className=\"fas fa-address-book\"></i>Appointments</a></li>\r\n                            <li><a className=\"side-text\"><i className=\"fas fa-map-pin\"></i>Settings</a></li>\r\n                        </ul>\r\n\r\n                    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"user-name\">{props.name} <i className=\"fas fa-caret-down\"></i></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport '../styles/sidebar.css'\r\nimport { connect } from \"react-redux\";\r\nimport { defaults } from \"../redux/action\";\r\nimport axios from 'axios';\r\nimport Pagecontents from './Pagecontents';\r\nimport Sidebar from './Sidebar';\r\nimport Header from './Header';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            pageData: [],\r\n            \r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        var pageDat = [];\r\n        axios.get(`https://graph.facebook.com/${this.props.userID}/accounts?access_token=${this.props.access_token}`)\r\n            .then(res => {\r\n                pageDat = res.data.data;\r\n                console.log(pageDat);\r\n                this.setState({\r\n                    pageData: res.data.data\r\n                });\r\n            })\r\n    }\r\n    render() {  \r\n        return (\r\n            < div >\r\n                <div className=\"wrapper\">\r\n                    <Sidebar />\r\n                    <div className=\"main_content\">\r\n                        <Header name={this.props.name} />\r\n                        <div className=\"info\">\r\n                            <table className=\"table table-striped table-condensed\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"list-head text-center\" colSpan=\"6\">Listing</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Category</th>\r\n                                        <th>Rating</th>\r\n                                        <th>Listed</th>\r\n                                        <th>Status</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <Pagecontents data={this.state.pageData} />\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        name: state.name,\r\n        access_token: state.shortAccessToken,\r\n        userID: state.userId\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport Dashboard from './Dashboard';\r\nimport { connect } from \"react-redux\";\r\nimport { defaults } from \"../redux/action\";\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            auth: false,\r\n            data : []\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    responseFacebook = (response) => {\r\n        if (response.status != \"unknown\") {\r\n            this.setState({\r\n                auth: true,\r\n                data: response\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    componentClicked = data => {\r\n    }\r\n\r\n    render() {\r\n        var page = <div className=\"login-page\"><div className=\"center-note\">Stay Connected With US!! <br /><FacebookLogin\r\n        appId=\"347245026387228\"\r\n        autoLoad={false}\r\n        fields=\"name,email,picture\"\r\n        onClick={this.componentClicked}\r\n        callback={this.responseFacebook} /></div></div>\r\n            \r\n        if (this.state.auth) {\r\n            this.props.defaults(this.state.data)\r\n            // page = <Dashboard />\r\n            return(\r\n                <Redirect to = \"/dashboard\" />\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {page}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        defaults: (data) => dispatch(defaults(data)),\r\n    }\r\n} \r\n\r\nexport default connect(null,mapDispatchToProps)(Login)\r\n","import { DEFAULT_ACTION } from \"./actionType\";\r\n\r\nexport const defaults = (data) => {\r\n   return{\r\n        type : DEFAULT_ACTION,\r\n        payload : data\r\n   }\r\n}","export const DEFAULT_ACTION = \"DEFAULT_ACTION\";","import { DEFAULT_ACTION } from \"./actionType\";\r\nconst initState = {\r\n    name: \"\",\r\n    photo: \"\",\r\n    email: \"\",\r\n    userId: \"\",\r\n    shortAccessToken : \"\"\r\n}\r\n\r\nconst reducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case DEFAULT_ACTION:\r\n            return {\r\n                ...state, \r\n                name : action.payload.name,\r\n                photo : action.payload.picture,\r\n                userId : action.payload.userID,\r\n                email : action.payload.email,\r\n                shortAccessToken : action.payload.accessToken,\r\n          \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducers","import reducers from \"./reducer\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(reducers);\r\nexport default store\r\n","import Axios from 'axios';\r\nimport React, { Component } from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory } from \"react-router-dom\";\r\n\r\nclass UpComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             message : \"\"\r\n        }\r\n    }\r\n    \r\n    postHandler = () => {\r\n        const {id} = this.props.match.params;\r\n        Axios.post(`https://graph.facebook.com/${id}/feed?`,{\r\n            message : this.state.message,\r\n            access_token : this.props.location.state.acc_tok\r\n        }).then(\r\n            ress => {\r\n               this.setState({\r\n                   message : \"\"\r\n               })\r\n            }\r\n        )\r\n    }\r\n\r\n    messageHandler = (event) => {\r\n        this.setState({\r\n            message : event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"wrapper\">\r\n                    <Sidebar />\r\n                    <div className=\"main_content\">\r\n                        <Header name={this.props.name} />\r\n                        <div className=\"info text-center\">\r\n                            <h3>Hello!! Add A Message to the page</h3>\r\n                            <textarea type=\"text\" className=\"message\" value = {this.state.message} onChange = {this.messageHandler}  /> <br />\r\n                            <button className=\"btn btn-primary\" onClick = {this.postHandler} >Post <i className=\"fas fa-paper-plane\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        name: state.name,\r\n        access_token: state.shortAccessToken,\r\n        userID: state.userId\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(UpComponent)\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Login from './components/Login';\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useHistory } from \"react-router-dom\";\nimport UpComponent from './components/UpComponent';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Login />\n        </div>\n        <Switch>\n          <Route exact path='/' exact component={Login} />\n          <Route exact path='/dashboard' exact component={Dashboard} />\n          <Route exact path='/update/:id' exact component={UpComponent} />\n        </Switch>\n      </Router>\n\n\n    </Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}